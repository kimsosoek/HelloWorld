// LEI_WULONG.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
// 소스파일
// 주석(Comment):컴파일러가 무시하는 문장
// (프로그램에서 실행이 되지 않는 영향을 미치지 않는 부분)

/* 이건 다 주석이다 몇줄이
되더라고 굳이 쳌쳌안해도 됨*/
// ctr+ 위아래 는 페이지 업다운
// ctr+ 양옆 단어단위로
// 컨트롤+D 는 한줄 복사 추가			 
// SHIFT + DELETE 는 한줄 삭제		 
// SHIFT + 화살표 는 블럭잡기		   
// ALT + SHIFT + 화살표 는 세로블럭잡기 
// ctr + space 는 자동환성기능 (인텔리센스) 창 띄우기
// art + 방향키 위아래 는 줄바꾸기
// f5는 프로그램 디버그 
// clt+ bb 는 프로젝트 빌드
// using namespace std;
// c++ 메인 함수는 하나만 존재해야함
// {}는 항상 쌍으로 열었으면 닫아야함(일치하는 토큰을 찾을 수 없습니다 라는 오류설명)
// 오류가 이해가 안가면 코드 번호를 누르면 친절하게 알려줌
// 빌드 : 실행파일 생성하기
// 리빌드: 전체 다시 빌드하기 (정리+빌드)
// 헤더는 순서를 신경써서 정리해야함.
/* 컴파일러: 번역기(사람이 써놓은 코드를 기계가 알아듣게 번역해줌) 컴파일러는 종류별로 따로 있음 표준기능은 다 있음. >목적코드 생성*/

// 이스케이프 시퀀스
// \n 줄바꾸기
// \t 탭넣기
// \" 쌍따움표 한게
// \\ \ 찍기
// \r 캐리지 리턴(윈도우에는 의미없음 리눅스에서 중요)
// 추가추가추가ㅇㅇ
#include <iostream> // 입출력 관련(cout)
#include <cstdio>
//#include "header.h"


int main() // 엔트리 포인트(코드가 시작되는 곳)
{
	printf("HelloWorld"); //c언어의 출력 방법
	printf("김소석\n");// "" 안에 뺵슬래시가 있으면 줄을 바꾸라는 의미(이스케이프 시퀀스)
	printf("95년생");
	printf("▩▒㈜");

	//	std::cout << "HelloWoreld"; // c++ 출력방법

	int number = 0;
	scanf_s("%d", &number); //숫자를 하나 입력받기(C)
	printf("입력한 숫자는(C) : %d\n, number");

	std::cin >> number;   //숫자를 하나 입력 받기
	printf("입력한 숫자는(C++) : %d\n", number);
	return 0;
}

// 프로그램 실행: <Ctrl+F5> 또는 [디버그] > [디버깅하지 않고 시작] 메뉴
// 프로그램 디버그: <F5> 키 또는 [디버그] > [디버깅 시작] 메뉴

// 시작을 위한 팁: 
//   1. [솔루션 탐색기] 창을 사용하여 파일을 추가/관리합니다.
//   2. [팀 탐색기] 창을 사용하여 소스 제어에 연결합니다.
//   3. [출력] 창을 사용하여 빌드 출력 및 기타 메시지를 확인합니다.
//   4. [오류 목록] 창을 사용하여 오류를 봅니다.
//   5. [프로젝트] > [새 항목 추가]로 이동하여 새 코드 파일을 만들거나, [프로젝트] > [기존 항목 추가]로 이동하여 기존 코드 파일을 프로젝트에 추가합니다.
//   6. 나중에 이 프로젝트를 다시 열려면 [파일] > [열기] > [프로젝트]로 이동하고 .sln 파일을 선택합니다.

